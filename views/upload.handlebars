<style>
    #upload-div {
        padding: 10px;
    }

    .modal-background {
        display: none;

        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        background-color: rgba(0, 0, 0, 0.5);

        z-index: 20;
    }
    .modal-background > div {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .progress-bar {
        height: 35px;
        width: 250px;
        background-color: #ddd;
    }
    .progress-bar-fill {
        height: 100%;
        width: 0%;
        background-color: #04AA6D;
        display: flex;
        align-items: center;
        font-weight: bold;
        transition: width 0.25s;
    }
    .progress-bar-text {
        margin-left: 10px;
        font-weight: bold;
    }


    .drag-drop-div {
        background-color: #eee;
        width: 100%;
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }
    .drag-drop-div > * {
        color: #333;
    }
    .drag-drop-div > label {
        cursor: pointer;
    }
</style>

{{!-- <div id="create">
    <div id="upload"> --}}
        <form action="/upload" method="POST" enctype="multipart/form-data" id="upload-video">
            <input type="hidden" name="_csrf" value="{{csrfToken}}">
            <div class="mb-3 upload-video" id="upload-div">
                <input class="form-control" type="text" placeholder="TITLE" id="uploadTitle" name="title" maxlength="32">
                <input class="form-control" type="text" placeholder="DESCRIPTION (Needn't to be filled)" id="uploadDescription" name="description" maxlength="100">
                <div class="drag-drop-div" id="dragDropDiv">
                    <label for="chooseUploadVideo"><strong>Choose a file</strong><span class="box__dragndrop"> or drag it here</span>.<br>
                        <p style="font-size: 12px; text-align: center;">You can only choose 1 video!</p>
                    </label>
                    <h3 id="fileChooseResult"></h3>
                    <input type="file" style="display: none;" class="form-control" accept="video/*" name="video" id="chooseUploadVideo">
                </div>
                <button class="btn btn-primary" id="submitUpload" disabled>Upload</button>
            </div>
        </form>
    {{!-- </div>
</div> --}}

<div class="modal-background" id="uploadVideoModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Uploading...</h5>
                    {{!-- <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="uploadVideoModal.style.display = 'none';"></button> --}}
                </div>
                <div class="modal-body">
                    <div class="progress-bar">
                        <div class="progress-bar-fill" id="progressBar">
                            <span class="progress-bar-text" id="progressBarSpan">0%</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="stopUploadVideo">Stop</button>
                    {{!-- <button type="button" class="btn btn-primary">Understood</button> --}}
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    const uploadVideoModal = document.querySelector("#uploadVideoModal")
    const stopUploadVideo = document.querySelector("#stopUploadVideo")

    const uploadVideo = document.querySelector("#upload-video")
    const progressBar = document.querySelector("#progressBar")
    const progressBarSpan = document.querySelector("#progressBarSpan")

    const dragDropDiv = document.querySelector("#dragDropDiv")
    const chooseUploadVideo = document.querySelector("#chooseUploadVideo")
    const fileChooseResult = document.querySelector("#fileChooseResult")
    const uploadTitle = document.querySelector("#uploadTitle")
    const submitUpload = document.querySelector("#submitUpload")

    const updateSubmitButton = () => {
        if (uploadTitle.value == "" || fileChooseResult.innerHTML == "")
            submitUpload.disabled = true
        else
            submitUpload.disabled = false
    }
    uploadTitle.oninput = updateSubmitButton
    fileChooseResult.oninput = updateSubmitButton

    let dragFileData = null


    var isAdvancedUpload = function() {
        var div = document.createElement('div');
        return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;
    }();
    chooseUploadVideo.addEventListener("input", e => {
        dragFileData = null
        fileChooseResult.innerHTML = e.target.value.split("\\")[e.target.value.split("\\").length-1]
    })
    if (isAdvancedUpload) {
        dragDropDiv.ondrop = e => {
            e.preventDefault()
            var currentFile = e.dataTransfer.files[event.dataTransfer.files.length-1]
            if (currentFile.type.split("/")[0] !== "video" || e.dataTransfer.files.length > 1)
                return false
            dragFileData = currentFile
            fileChooseResult.innerHTML = currentFile.name
            dragDropDiv.style = ""
        }
        dragDropDiv.ondragover = e => {
            e.preventDefault()
            var currentFile = e.dataTransfer.items[e.dataTransfer.items.length-1]
            if (currentFile.type.split("/")[0] !== "video" || e.dataTransfer.items.length > 1)
                return dragDropDiv.style = "border: 3px solid red;"
            dragDropDiv.style = "border: 3px solid blue;"
        }
        dragDropDiv.ondragleave = e => {
            e.preventDefault()
            dragDropDiv.style.border = ""
        }
    }

    function closeModal() {
        chooseUploadVideo.value = ""
        uploadVideoModal.style.display = 'none';
    }

    uploadVideo.addEventListener("submit", event => {
        event.preventDefault()

        progressBar.style.width = 0
        submitUpload.disabled = true

        uploadVideoModal.style.display = "block"

        const xhr = new XMLHttpRequest()
        xhr.open(event.target.method, event.target.action, true)
        xhr.upload.addEventListener("progress", e => {
            const percent = e.lengthComputable ? (e.loaded / e.total) * 100 : 0
            progressBar.style.width = percent + "%"
            const afterPoint = 1
            progressBarSpan.innerHTML = Math.round(percent * afterPoint) / afterPoint + "%"
        })

        // xhr.setRequestHeader("Content-type", event.target.enctype)
        // xhr.setRequestHeader("Content-type", "w-xxx-form-urlencoded")
        xhr.setRequestHeader("enctype", event.target.enctype)
        // var dataDropFile = chooseUploadVideo.getAttribute("data-drop-file")
        if (dragFileData !== null) {
            var newFormData = new FormData()
            newFormData.append("title", uploadTitle.value)
            newFormData.append("description", document.querySelector("#uploadDescription").value)
            newFormData.append("video", dragFileData)
            xhr.send(newFormData)
        } else
            xhr.send(new FormData(uploadVideo))

        xhr.upload.onabort = () => {
            window.location.href = "/create"
        }
        /*xhr.upload.onloadend = () => {
            window.location.href = "/"
        }*/
        xhr.onload = function (e) {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    console.log(xhr.responseText)
                    window.location.href = "/"
                } else {
                    uploadVideoModal.style.display = "none"
                    alert(xhr.statusText)
                    console.error(xhr.statusText)
                }
            }
        }

        stopUploadVideo.onclick = () => {
            xhr.abort()
            window.location.href = "/create"
        }
    })
</script>